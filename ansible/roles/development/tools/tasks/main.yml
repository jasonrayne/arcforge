---
- name: Install development packages
  package:
    name: "{{ development_packages }}"
    state: present
  become: true

- name: Install AUR development packages
  command: paru -S --noconfirm {{ item }}
  loop: "{{ dev_aur_packages }}"
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install Python packages for Neovim
  pip:
    name: "{{ python_packages }}"
    state: present
    extra_args: --user
  when: python_packages is defined

- name: Install Go tools
  shell: go install {{ item }}
  loop: "{{ go_tools }}"
  environment:
    GOPATH: "{{ ansible_env.HOME }}/go"
    PATH: "{{ ansible_env.PATH }}:{{ ansible_env.HOME }}/go/bin"
  when: go_tools is defined and go_tools | length > 0

# Ollama service configuration (runs after AUR packages are installed)
- name: Check if ollama is installed
  command: which ollama
  register: ollama_installed
  failed_when: false
  changed_when: false

- name: Check if ollama service exists
  stat:
    path: /usr/lib/systemd/system/ollama.service
  register: ollama_service_exists
  when: ollama_installed.rc == 0

- name: Create ollama systemd service override directory
  file:
    path: /etc/systemd/system/ollama.service.d
    state: directory
    mode: '0755'
  become: true
  when: ollama_installed.rc == 0 and ollama_service_exists.stat.exists

- name: Configure ollama to use custom models directory
  copy:
    content: |
      [Service]
      Environment="OLLAMA_MODELS=/mnt/misc/ai/ollama/models"
    dest: /etc/systemd/system/ollama.service.d/override.conf
    mode: '0644'
  become: true
  when: ollama_installed.rc == 0 and ollama_service_exists.stat.exists

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  become: true
  when: ollama_installed.rc == 0 and ollama_service_exists.stat.exists

- name: Enable and start ollama service
  systemd:
    name: ollama
    enabled: yes
    state: started
  become: true
  when: ollama_installed.rc == 0 and ollama_service_exists.stat.exists

- name: Open ollama port with UFW
  ufw:
    rule: allow
    port: 11434
    proto: tcp
    comment: "ollama API for Open WebUI"
  become: true
  when: ollama_installed.rc == 0
